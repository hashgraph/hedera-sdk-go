//*
// # Block Stream Info
// Information stored in consensus state at the beginning of each block to
// record the status of the immediately prior block.
//
// ### Keywords
// The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
// "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
// document are to be interpreted as described in
// [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
// [RFC8174](https://www.ietf.org/rfc/rfc8174).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: block_stream_info.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// A message stored in state to maintain block stream parameters.<br/>
// Nodes use this information for three purposes.
//  1. To maintain hash chain continuity at restart and reconnect boundaries.
//  1. To store historical hashes for implementation of the EVM `BLOCKHASH`
//     and `PREVRANDAO` opcodes.
//  1. To track the amount of consensus time that has passed between blocks.
//
// This value MUST be updated for every block.<br/>
// This value MUST be transmitted in the "state changes" section of
// _each_ block, but MUST be updated at the beginning of the _next_ block.<br/>
// This value SHALL contain the block hash up to, and including, the
// immediately prior completed block.
type BlockStreamInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// A block number.<br/>
	// This is the current block number.
	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	// *
	// A consensus time for the current block.<br/>
	// This is the _first_ consensus time in the current block, and
	// is used to determine if this block was the first across an
	// important boundary in consensus time, such as UTC midnight.
	// This may also be used to purge entities expiring between the last
	// block time and this time.
	BlockTime *Timestamp `protobuf:"bytes,2,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	// *
	// A concatenation of hash values.<br/>
	// This combines several trailing output block item hashes and
	// is used as a seed value for a pseudo-random number generator.<br/>
	// This is also requiried to implement the EVM `PREVRANDAO` opcode.
	TrailingOutputHashes []byte `protobuf:"bytes,3,opt,name=trailing_output_hashes,json=trailingOutputHashes,proto3" json:"trailing_output_hashes,omitempty"`
	// *
	// A concatenation of hash values.<br/>
	// This field combines up to 256 trailing block hashes.
	// <p>
	// If this message is for block number N, then the earliest available
	// hash SHALL be for block number N-256.<br/>
	// The latest available hash SHALL be for block N-1.<br/>
	// This is REQUIRED to implement the EVM `BLOCKHASH` opcode.
	TrailingBlockHashes []byte `protobuf:"bytes,4,opt,name=trailing_block_hashes,json=trailingBlockHashes,proto3" json:"trailing_block_hashes,omitempty"`
}

func (x *BlockStreamInfo) Reset() {
	*x = BlockStreamInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_block_stream_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStreamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStreamInfo) ProtoMessage() {}

func (x *BlockStreamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_block_stream_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStreamInfo.ProtoReflect.Descriptor instead.
func (*BlockStreamInfo) Descriptor() ([]byte, []int) {
	return file_block_stream_info_proto_rawDescGZIP(), []int{0}
}

func (x *BlockStreamInfo) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BlockStreamInfo) GetBlockTime() *Timestamp {
	if x != nil {
		return x.BlockTime
	}
	return nil
}

func (x *BlockStreamInfo) GetTrailingOutputHashes() []byte {
	if x != nil {
		return x.TrailingOutputHashes
	}
	return nil
}

func (x *BlockStreamInfo) GetTrailingBlockHashes() []byte {
	if x != nil {
		return x.TrailingBlockHashes
	}
	return nil
}

var File_block_stream_info_proto protoreflect.FileDescriptor

var file_block_stream_info_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x68,
	0x65, 0x64, 0x65, 0x72, 0x61, 0x2e, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x1a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcf, 0x01, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x72,
	0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x74, 0x72, 0x61, 0x69,
	0x6c, 0x69, 0x6e, 0x67, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x12, 0x32, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x13, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x42, 0x26, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x65, 0x64, 0x65,
	0x72, 0x61, 0x68, 0x61, 0x73, 0x68, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_block_stream_info_proto_rawDescOnce sync.Once
	file_block_stream_info_proto_rawDescData = file_block_stream_info_proto_rawDesc
)

func file_block_stream_info_proto_rawDescGZIP() []byte {
	file_block_stream_info_proto_rawDescOnce.Do(func() {
		file_block_stream_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_block_stream_info_proto_rawDescData)
	})
	return file_block_stream_info_proto_rawDescData
}

var file_block_stream_info_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_block_stream_info_proto_goTypes = []interface{}{
	(*BlockStreamInfo)(nil), // 0: com.hedera.hapi.node.state.blockstream.BlockStreamInfo
	(*Timestamp)(nil),       // 1: proto.Timestamp
}
var file_block_stream_info_proto_depIdxs = []int32{
	1, // 0: com.hedera.hapi.node.state.blockstream.BlockStreamInfo.block_time:type_name -> proto.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_block_stream_info_proto_init() }
func file_block_stream_info_proto_init() {
	if File_block_stream_info_proto != nil {
		return
	}
	file_timestamp_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_block_stream_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockStreamInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_block_stream_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_block_stream_info_proto_goTypes,
		DependencyIndexes: file_block_stream_info_proto_depIdxs,
		MessageInfos:      file_block_stream_info_proto_msgTypes,
	}.Build()
	File_block_stream_info_proto = out.File
	file_block_stream_info_proto_rawDesc = nil
	file_block_stream_info_proto_goTypes = nil
	file_block_stream_info_proto_depIdxs = nil
}
