//*
// # Tss Share Signature
// Represents a transaction that submits a node's share signature on a block hash
// during the TSS (Threshold Signature Scheme) process.
//
// ### Keywords
// The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
// "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
// document are to be interpreted as described in
// [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
// [RFC8174](https://www.ietf.org/rfc/rfc8174).

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.3
// source: tss_share_signature.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// A TSS Share Signature transaction Body.<br/>
// This transaction body communicates a node's signature of a block hash
// using its private share within the TSS process.
// This transaction MUST be prioritized for low latency gossip transmission.
//
// ### Block Stream Effects
// This transaction body will be present in the block stream. This will not have
// any state changes or transaction output or transaction result.
type TssShareSignatureTransactionBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// A SHA2-384 Hash.<br/>
	// This is the hash of the roster that includes the node whose
	// share produced this share signature.
	// <p>
	// This value is REQUIRED.<br/>
	// This value MUST identify the network roster active at the time this
	// share signature was produced.<br/>
	// This share signature MUST be produced from a share distributed during
	// the re-keying process for the identified roster.
	RosterHash []byte `protobuf:"bytes,1,opt,name=roster_hash,json=rosterHash,proto3" json:"roster_hash,omitempty"`
	// *
	// An index of the share from the node private shares.<br/>
	// This is the index of the share that produced this share signature.
	// <p>
	// This value is REQUIRED.<br/>
	// The share referred to by this index MUST exist.<br/>
	// The share index MUST be greater than or equal to 0.
	ShareIndex uint64 `protobuf:"varint,2,opt,name=share_index,json=shareIndex,proto3" json:"share_index,omitempty"`
	// *
	// A SHA2-384 hash.<br/>
	// This is the hash of the message that was signed.
	// <p>
	// This value is REQUIRED.<br/>
	// The message signed MUST be a block hash.
	MessageHash []byte `protobuf:"bytes,3,opt,name=message_hash,json=messageHash,proto3" json:"message_hash,omitempty"`
	// *
	// The signature bytes.<br/>
	// This is the signature generated by signing the block hash with the node's private share.
	// <p>
	// This value is REQUIRED.<br/>
	// This value MUST be a valid signature of the message hash with the node's private share.
	ShareSignature []byte `protobuf:"bytes,4,opt,name=share_signature,json=shareSignature,proto3" json:"share_signature,omitempty"`
}

func (x *TssShareSignatureTransactionBody) Reset() {
	*x = TssShareSignatureTransactionBody{}
	mi := &file_tss_share_signature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TssShareSignatureTransactionBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TssShareSignatureTransactionBody) ProtoMessage() {}

func (x *TssShareSignatureTransactionBody) ProtoReflect() protoreflect.Message {
	mi := &file_tss_share_signature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TssShareSignatureTransactionBody.ProtoReflect.Descriptor instead.
func (*TssShareSignatureTransactionBody) Descriptor() ([]byte, []int) {
	return file_tss_share_signature_proto_rawDescGZIP(), []int{0}
}

func (x *TssShareSignatureTransactionBody) GetRosterHash() []byte {
	if x != nil {
		return x.RosterHash
	}
	return nil
}

func (x *TssShareSignatureTransactionBody) GetShareIndex() uint64 {
	if x != nil {
		return x.ShareIndex
	}
	return 0
}

func (x *TssShareSignatureTransactionBody) GetMessageHash() []byte {
	if x != nil {
		return x.MessageHash
	}
	return nil
}

func (x *TssShareSignatureTransactionBody) GetShareSignature() []byte {
	if x != nil {
		return x.ShareSignature
	}
	return nil
}

var File_tss_share_signature_proto protoreflect.FileDescriptor

var file_tss_share_signature_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x73, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x63, 0x6f, 0x6d,
	0x2e, 0x68, 0x65, 0x64, 0x65, 0x72, 0x61, 0x2e, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x61, 0x75, 0x78, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x79, 0x2e,
	0x74, 0x73, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x20, 0x54, 0x73, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x31, 0x0a, 0x2d, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x65,
	0x64, 0x65, 0x72, 0x61, 0x2e, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x61, 0x75, 0x78, 0x69, 0x6c, 0x69, 0x61, 0x72, 0x79, 0x2e, 0x74, 0x73, 0x73,
	0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tss_share_signature_proto_rawDescOnce sync.Once
	file_tss_share_signature_proto_rawDescData = file_tss_share_signature_proto_rawDesc
)

func file_tss_share_signature_proto_rawDescGZIP() []byte {
	file_tss_share_signature_proto_rawDescOnce.Do(func() {
		file_tss_share_signature_proto_rawDescData = protoimpl.X.CompressGZIP(file_tss_share_signature_proto_rawDescData)
	})
	return file_tss_share_signature_proto_rawDescData
}

var file_tss_share_signature_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tss_share_signature_proto_goTypes = []any{
	(*TssShareSignatureTransactionBody)(nil), // 0: com.hedera.hapi.services.auxiliary.tss.TssShareSignatureTransactionBody
}
var file_tss_share_signature_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tss_share_signature_proto_init() }
func file_tss_share_signature_proto_init() {
	if File_tss_share_signature_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tss_share_signature_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tss_share_signature_proto_goTypes,
		DependencyIndexes: file_tss_share_signature_proto_depIdxs,
		MessageInfos:      file_tss_share_signature_proto_msgTypes,
	}.Build()
	File_tss_share_signature_proto = out.File
	file_tss_share_signature_proto_rawDesc = nil
	file_tss_share_signature_proto_goTypes = nil
	file_tss_share_signature_proto_depIdxs = nil
}
