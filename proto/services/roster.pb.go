// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.25.3
// source: roster.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// A single roster in the network state.
// <p>
// The roster SHALL be a list of `RosterEntry` objects.
type Roster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// List of roster entries, one per consensus node.
	// <p>
	// This list SHALL contain roster entries in natural order of ascending node ids.
	// This list SHALL NOT be empty.<br/>
	RosterEntries []*RosterEntry `protobuf:"bytes,1,rep,name=roster_entries,json=rosterEntries,proto3" json:"roster_entries,omitempty"`
}

func (x *Roster) Reset() {
	*x = Roster{}
	mi := &file_roster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Roster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Roster) ProtoMessage() {}

func (x *Roster) ProtoReflect() protoreflect.Message {
	mi := &file_roster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Roster.ProtoReflect.Descriptor instead.
func (*Roster) Descriptor() ([]byte, []int) {
	return file_roster_proto_rawDescGZIP(), []int{0}
}

func (x *Roster) GetRosterEntries() []*RosterEntry {
	if x != nil {
		return x.RosterEntries
	}
	return nil
}

// *
// A single roster entry in the network state.
//
// Each roster entry SHALL encapsulate the elements required
// to manage node participation in the Threshold Signature Scheme (TSS).<br/>
// All fields are REQUIRED.
type RosterEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// A consensus node identifier.
	// <p>
	// Node identifiers SHALL be unique _within_ a ledger,
	// and MUST NOT be repeated _between_ shards and realms.
	NodeId uint64 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// *
	// A consensus weight.
	// <p>
	// Each node SHALL have a weight of zero or more in consensus calculations.<br/>
	// The sum of the weights of all nodes in the roster SHALL form the total weight of the system,
	// and each node's individual weight SHALL be proportional to that sum.<br/>
	Weight uint64 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	// *
	// An RSA public certificate used for signing gossip events.
	// <p>
	// This value SHALL be a certificate of a type permitted for gossip
	// signatures.<br/>
	// This value SHALL be the DER encoding of the certificate presented.<br/>
	// This field is REQUIRED and MUST NOT be empty.
	GossipCaCertificate []byte `protobuf:"bytes,3,opt,name=gossip_ca_certificate,json=gossipCaCertificate,proto3" json:"gossip_ca_certificate,omitempty"`
	// *
	// A list of service endpoints for gossip.
	// <p>
	// These endpoints SHALL represent the published endpoints to which other
	// consensus nodes may _gossip_ transactions.<br/>
	// If the network configuration value `gossipFqdnRestricted` is set, then
	// all endpoints in this list SHALL supply only IP address.<br/>
	// If the network configuration value `gossipFqdnRestricted` is _not_ set,
	// then endpoints in this list MAY supply either IP address or FQDN, but
	// SHALL NOT supply both values for the same endpoint.<br/>
	// This list SHALL NOT be empty.<br/>
	GossipEndpoint []*ServiceEndpoint `protobuf:"bytes,5,rep,name=gossip_endpoint,json=gossipEndpoint,proto3" json:"gossip_endpoint,omitempty"`
}

func (x *RosterEntry) Reset() {
	*x = RosterEntry{}
	mi := &file_roster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RosterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RosterEntry) ProtoMessage() {}

func (x *RosterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_roster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RosterEntry.ProtoReflect.Descriptor instead.
func (*RosterEntry) Descriptor() ([]byte, []int) {
	return file_roster_proto_rawDescGZIP(), []int{1}
}

func (x *RosterEntry) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *RosterEntry) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RosterEntry) GetGossipCaCertificate() []byte {
	if x != nil {
		return x.GossipCaCertificate
	}
	return nil
}

func (x *RosterEntry) GetGossipEndpoint() []*ServiceEndpoint {
	if x != nil {
		return x.GossipEndpoint
	}
	return nil
}

var File_roster_proto protoreflect.FileDescriptor

var file_roster_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21,
	0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x65, 0x64, 0x65, 0x72, 0x61, 0x2e, 0x68, 0x61, 0x70, 0x69, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x1a, 0x11, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x06, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x55,
	0x0a, 0x0e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x65, 0x64,
	0x65, 0x72, 0x61, 0x2e, 0x68, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70,
	0x5f, 0x63, 0x61, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x43, 0x61, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x67, 0x6f,
	0x73, 0x73, 0x69, 0x70, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e, 0x67, 0x6f, 0x73,
	0x73, 0x69, 0x70, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4a, 0x04, 0x08, 0x04, 0x10,
	0x05, 0x42, 0x26, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x65, 0x64, 0x65, 0x72, 0x61, 0x68,
	0x61, 0x73, 0x68, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_roster_proto_rawDescOnce sync.Once
	file_roster_proto_rawDescData = file_roster_proto_rawDesc
)

func file_roster_proto_rawDescGZIP() []byte {
	file_roster_proto_rawDescOnce.Do(func() {
		file_roster_proto_rawDescData = protoimpl.X.CompressGZIP(file_roster_proto_rawDescData)
	})
	return file_roster_proto_rawDescData
}

var file_roster_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_roster_proto_goTypes = []any{
	(*Roster)(nil),          // 0: com.hedera.hapi.node.state.roster.Roster
	(*RosterEntry)(nil),     // 1: com.hedera.hapi.node.state.roster.RosterEntry
	(*ServiceEndpoint)(nil), // 2: proto.ServiceEndpoint
}
var file_roster_proto_depIdxs = []int32{
	1, // 0: com.hedera.hapi.node.state.roster.Roster.roster_entries:type_name -> com.hedera.hapi.node.state.roster.RosterEntry
	2, // 1: com.hedera.hapi.node.state.roster.RosterEntry.gossip_endpoint:type_name -> proto.ServiceEndpoint
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_roster_proto_init() }
func file_roster_proto_init() {
	if File_roster_proto != nil {
		return
	}
	file_basic_types_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_roster_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_roster_proto_goTypes,
		DependencyIndexes: file_roster_proto_depIdxs,
		MessageInfos:      file_roster_proto_msgTypes,
	}.Build()
	File_roster_proto = out.File
	file_roster_proto_rawDesc = nil
	file_roster_proto_goTypes = nil
	file_roster_proto_depIdxs = nil
}
